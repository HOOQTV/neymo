{"version":3,"sources":["neymo.js"],"names":["Neymo","key","secret","url","NeymoError","credentials","api_key","api_secret","client","Blackadder","retries","options","type","payload","substr","uuid","v4","headers","undefined","indexOf","changeTo","paramCase","Object","assign","post","conclude","body","response"],"mappings":";;;;;;qjBAAA;;;AACA;;AACA;;;;AACA;;;;AACA;;;;;;;;;;AAEA;IACqBA,K;AACjB;;;;;AAKA,mBAAYC,GAAZ,EAAiBC,MAAjB,EAAyBC,GAAzB,EAA8B;AAAA;;AAC1B,YAAI,CAACF,GAAD,IAAQ,CAACC,MAAb,EAAqB;AACjB,kBAAM,IAAIE,iBAAJ,CAAe,6BAAf,EAA8C,KAA9C,EAAqD,mBAArD,CAAN;AACH;AACD,aAAKC,WAAL,GAAmB;AACfC,qBAASL,GADM;AAEfM,wBAAYL;AAFG,SAAnB;AAIA,aAAKC,GAAL,GAAWA,GAAX;AACA,aAAKK,MAAL,GAAc,IAAIC,oBAAJ,CAAe,EAAEC,SAAS,CAAX,EAAf,CAAd;AACH;;;;;;oBAEUC,O,uEAAU,EAAEC,MAAM,KAAR,E;;;;;;AACXC,uC,GAAU;AACR,kDAAiBF,QAAQC,IAAR,CAAaE,MAAb,CAAoB,CAApB,EAAuB,CAAvB,CAAjB,SAA8CC,eAAKC,EAAL;AADtC,iC,EAGZC,O,GAAU;AACN,oDAAgB;AADV,iC;;;AAId,qCAAShB,GAAT,IAAgBU,OAAhB,EAAyB;AACrB,wCAAIA,QAAQV,GAAR,MAAiBiB,SAArB,EAAgC;AAC5BL,gDAAQZ,IAAIkB,OAAJ,CAAY,GAAZ,KAAoB,CAApB,GAAwBlB,GAAxB,GAA8BmB,qBAASC,SAAT,CAAmBpB,GAAnB,CAAtC,IAAiEU,QAAQV,GAAR,CAAjE;AACH;AACJ;AACDqB,uCAAOC,MAAP,CAAcV,OAAd,EAAuB,KAAKR,WAA5B;8CACO,I;;uCAAoB,KAAKG,MAAL,CAAYgB,IAAZ,CAAiB,KAAKrB,GAAtB,EAA2BU,OAA3B,EAAoC,EAAEI,gBAAF,EAApC,C;;;;6EAAfQ,Q;;;;;;;;;;;;;;;;;;wCAGa;AAAA,gBAAlBC,IAAkB,SAAlBA,IAAkB;AAAA,gBAAZC,QAAY,SAAZA,QAAY;;AACzB;AACA,mBAAOD,IAAP;AACH;;;;;;kBAtCgB1B,K","file":"neymo.js","sourcesContent":["/** @module Neymo*/\nimport { NeymoError } from './error';\nimport Blackadder from 'blackadder';\nimport changeTo from 'change-case';\nimport uuid from 'uuid';\n\n/** Class representing Neymo */\nexport default class Neymo {\n    /**\n     * Constructs Neymo\n     *\n     * @param {String} name - The name.\n     */\n    constructor(key, secret, url) {\n        if (!key || !secret) {\n            throw new NeymoError('key and secret are required', 40001, 'Neymo.constructor');\n        }\n        this.credentials = {\n            api_key: key,\n            api_secret: secret\n        };\n        this.url = url;\n        this.client = new Blackadder({ retries: 0});\n    }\n\n    async send(options = { type: 'sms' }) {\n        const payload = {\n                'client-ref': `${options.type.substr(0, 3)}-${uuid.v4()}`\n            },\n            headers = {\n                'Content-Type': 'application/x-www-form-urlencoded'\n            };\n\n        for (let key in options) {\n            if (options[key] !== undefined) {\n                payload[key.indexOf('_') >= 0 ? key : changeTo.paramCase(key)] = options[key];\n            }\n        }\n        Object.assign(payload, this.credentials);\n        return this.conclude(await this.client.post(this.url, payload, { headers }));\n    }\n\n    conclude({ body, response }) {\n        // FIXME; transform to a sensible object\n        return body;\n    }\n}\n"],"sourceRoot":"/Users/irfannurhakim/Documents/Project/hooq/neymo/lib"}