{"version":3,"sources":["neymo.js"],"names":[],"mappings":";;;;;;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;IAGqB,K;;;;;;;AAMjB,mBAAY,GAAZ,EAAiB,MAAjB,EAAyB,GAAzB,EAA4C;AAAA,YAAd,OAAc,yDAAJ,EAAI;;AAAA;;AACxC,YAAI,CAAC,GAAD,IAAQ,CAAC,MAAb,EAAqB;AACjB,kBAAM,sBAAe,6BAAf,EAA8C,KAA9C,EAAqD,mBAArD,CAAN;AACH;AACD,aAAK,WAAL,GAAmB;AACf,qBAAS,GADM;AAEf,wBAAY;AAFG,SAAnB;AAIA,aAAK,GAAL,GAAW,GAAX;AACA,aAAK,MAAL,GAAc,yBAAe,OAAf,CAAd;AACH;;;;;;oBAEU,O,yDAAU,EAAE,MAAM,KAAR,E;oBACX,O,EAGF,O,EAIK,G;;;;;AAPH,uC,GAAU;AACR,kDAAiB,QAAQ,IAAR,CAAa,MAAb,CAAoB,CAApB,EAAuB,CAAvB,CAAjB,SAA8C,eAAK,EAAL;AADtC,iC,EAGZ,O,GAAU;AACN,oDAAgB;AADV,iC;;;AAId,qCAAS,GAAT,IAAgB,OAAhB,EAAyB;AACrB,wCAAI,QAAQ,GAAR,MAAiB,SAArB,EAAgC;AAC5B,gDAAQ,IAAI,OAAJ,CAAY,GAAZ,KAAoB,CAApB,GAAwB,GAAxB,GAA8B,qBAAS,SAAT,CAAmB,GAAnB,CAAtC,IAAiE,QAAQ,GAAR,CAAjE;AACH;AACJ;AACD,uCAAO,MAAP,CAAc,OAAd,EAAuB,KAAK,WAA5B;8CACO,I;;uCAAoB,KAAK,MAAL,CAAY,IAAZ,CAAiB,KAAK,GAAtB,EAA2B,OAA3B,EAAoC,EAAE,gBAAF,EAApC,C;;;;6EAAf,Q;;;;;;;;;;;;;;;;;;uCAGa;AAAA,gBAAlB,IAAkB,QAAlB,IAAkB;AAAA,gBAAZ,QAAY,QAAZ,QAAY;;;AAEzB,mBAAO,IAAP;AACH;;;;;;kBAtCgB,K","file":"neymo.js","sourcesContent":["/** @module Neymo*/\nimport { NeymoError } from './error';\nimport Blackadder from 'blackadder';\nimport changeTo from 'change-case';\nimport uuid from 'uuid';\n\n/** Class representing Neymo */\nexport default class Neymo {\n    /**\n     * Constructs Neymo\n     *\n     * @param {String} name - The name.\n     */\n    constructor(key, secret, url, options = {}) {\n        if (!key || !secret) {\n            throw new NeymoError('key and secret are required', 40001, 'Neymo.constructor');\n        }\n        this.credentials = {\n            api_key: key,\n            api_secret: secret\n        };\n        this.url = url;\n        this.client = new Blackadder(options);\n    }\n\n    async send(options = { type: 'sms' }) {\n        const payload = {\n                'client-ref': `${options.type.substr(0, 3)}-${uuid.v4()}`\n            },\n            headers = {\n                'Content-Type': 'application/x-www-form-urlencoded'\n            };\n\n        for (let key in options) {\n            if (options[key] !== undefined) {\n                payload[key.indexOf('_') >= 0 ? key : changeTo.paramCase(key)] = options[key];\n            }\n        }\n        Object.assign(payload, this.credentials);\n        return this.conclude(await this.client.post(this.url, payload, { headers }));\n    }\n\n    conclude({ body, response }) {\n        // FIXME; transform to a sensible object\n        return body;\n    }\n}\n"],"sourceRoot":"/Users/diorahman/Experiments/hooq/src/luigi/neymo/lib"}