{"version":3,"sources":["sms.js"],"names":["TYPES","Text","Bnary","WAPPush","Unicode","vCal","vCard","Sms","key","secret","statusReportReq","ttl","messageClass","callback","validity","options","from","to","text","isUnicode","type","payload","Object","assign","send","unicodeText","sendText","body","udh","protocolId","Binary","vcal","vcard","title","url","Neymo"],"mappings":"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","file":"sms.js","sourcesContent":["/** @module Sms */\nimport Neymo from './neymo';\n\n// sms types\nconst TYPES = {\n    Text: 'text',\n    Bnary: 'binary',\n    WAPPush: 'wappush',\n    Unicode: 'unicode',\n    vCal: 'vcal',\n    vCard: 'vcard'\n};\n\n/** Class representing Sms */\nexport default class Sms extends Neymo {\n\n    /**\n     * Constructs the Sms API object.\n     *\n     * @param {String} key\n     * @param {String} secret\n     * @param [Object] options\n     */\n    constructor(key, secret, { statusReportReq = 1, ttl = 1000 * 30, messageClass, callback, validity } = {}) {\n        super(key, secret, 'https://rest.nexmo.com/sms/json');\n        this.options = {\n            statusReportReq,\n            ttl,\n            messageClass,\n            callback,\n            validity\n        };\n    }\n\n    /**\n     * Sends text message.\n     *\n     * @param {String} from - The sender number.\n     * @param {String} to - The recipient number.\n     * @param {String} text - The text message.\n     */\n    async sendText(from, to, text, isUnicode = false) {\n        const type = isUnicode ? TYPES.Unicode : TYPES.Text,\n            payload = { from, to, text, type };\n        Object.assign(payload, this.options);\n        return await this.send(payload);\n    }\n\n    /**\n     * Sends unicode text message.\n     *\n     * @param {String} from - The sender number.\n     * @param {String} to - The recipient number.\n     * @param {String} unicodeText - The unicode text message.\n     */\n    async sendUnicode(from, to, unicodeText) {\n        return await this.sendText(from, to, unicodeText, true);\n    }\n\n    /**\n     * Sends binary message.\n     *\n     * @param {String} from - The sender number.\n     * @param {String} to - The recipient number.\n     * @param {String} body - The body message.\n     */\n    async sendBinary(from, to, body, { udh, protocolId } = {}) {\n        const type = TYPES.Binary,\n            payload = { from, to, body, udh, protocolId, type };\n        Object.assign(payload, this.options);\n        return await this.send(payload);\n    }\n\n    /**\n     * Sends binary message.\n     *\n     * @param {String} from - The sender number.\n     * @param {String} to - The recipient number.\n     * @param {String} vcal - The vCal to be sent.\n     */\n    async sendvCal(from, to, vcal) {\n        const type = TYPES.vCal,\n            payload = { from, to, vcal, type };\n        Object.assign(payload, this.options);\n        return await this.send(payload);\n    }\n\n    /**\n     * Sends binary message.\n     *\n     * @param {String} from - The sender number.\n     * @param {String} to - The recipient number.\n     * @param {String} vcard - The vCard to be sent.\n     */\n    async sendvCard(from, to, vcard) {\n        const type = TYPES.vCard,\n            payload = { from, to, vcard, type };\n        Object.assign(payload, this.options);\n        return await this.send(payload);\n    }\n\n    /**\n     * Sends WAP push.\n     *\n     * @param {String} from - The sender number.\n     * @param {String} to - The recipient number.\n     * @param {String} title - The title to be sent.\n     * @param {String} url - The URL to be sent.\n     */\n    async sendWAPPush(from, to, title = 'HOOQ', url = 'https://www.hooq.tv') {\n        const type = TYPES.WAPPush,\n            payload = { from, to, title, url, type };\n        Object.assign(payload, this.options);\n        return await this.send(payload);\n    }\n}\n"],"sourceRoot":"/Users/irfannurhakim/Documents/Project/hooq/neymo/lib"}